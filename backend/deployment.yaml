---
apiVersion: v1
kind: Service
metadata:
  name: blackbird
spec:
  selector:
    app: blackbird
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: blackbird-store
spec:
  type: ClusterIP
  ports:
  - name: blackbird-store
    port: 5432
  selector:
    app: blackbird-store
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata: {name: blackbird}
spec:
  replicas: 1
  selector:
    matchLabels: {app: blackbird}
  strategy:
    rollingUpdate: {maxSurge: 1, maxUnavailable: 0}
    type: RollingUpdate
  revisionHistoryLimit: 1
  template:
    metadata:
      name: blackbird
      labels: {app: blackbird}
    spec:
      resources:
        limits:
          memory: 128Mi
          cpu: 0.5
      volumes:
      - name: docker-sock
        hostPath: {path: /var/run/docker.sock}
      - name: docker-directory
        hostPath: {path: /var/lib/docker}
      - name: docker-password
        secret: {secretName: docker-password}
      containers:
      - image: __IMAGE__
        imagePullPolicy: IfNotPresent
        name: blackbird
        env:
        - {name: DOCKER_API_VERSION, value: '1.12'}
        resources: {}
        securityContext: {privileged: true}
        volumeMounts:
        - {mountPath: /var/run/docker.sock, name: docker-sock, readOnly: false}
        - {mountPath: /var/lib/docker, name: docker-directory, readOnly: false}
        - {mountPath: /etc/secrets, name: docker-password, readOnly: true}
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata: {name: blackbird-store}
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels: {app: blackbird-store}
  template:
    metadata:
      name: blackbird-store
      labels: {app: blackbird-store}
    spec:
      containers:
      - name: ambassador-store
        image: postgres:9.6
        resources: {}
      restartPolicy: Always
